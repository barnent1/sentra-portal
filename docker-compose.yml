version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: sentra-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sentra}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sentra_secret}
      POSTGRES_DB: ${POSTGRES_DB:-sentra_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sentra}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sentra-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sentra-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secret}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sentra-network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: sentra-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-sentra}:${POSTGRES_PASSWORD:-sentra_secret}@postgres:5432/${POSTGRES_DB:-sentra_db}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-secret-key}
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./app:/app/app
      - ./prisma:/app/prisma
      - ./lib:/app/lib
      - ./types:/app/types
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sentra-network
    command: sh -c "npx prisma migrate deploy && npm run dev"

  # Prisma Studio (Database GUI)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: sentra-prisma-studio
    restart: unless-stopped
    ports:
      - "${PRISMA_STUDIO_PORT:-5555}:5555"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-sentra}:${POSTGRES_PASSWORD:-sentra_secret}@postgres:5432/${POSTGRES_DB:-sentra_db}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sentra-network
    command: npx prisma studio
    profiles:
      - tools

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: sentra-adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - sentra-network
    profiles:
      - tools

  # Mailhog (Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: sentra-mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
      - "${MAILHOG_WEB_PORT:-8025}:8025"
    networks:
      - sentra-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  sentra-network:
    driver: bridge
    name: sentra-network